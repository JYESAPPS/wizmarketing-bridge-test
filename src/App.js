// App.jsx

/**
 * ÌååÏùºÎ™Ö: App.js
 * ÏÑ§Î™Ö: Î∏åÎ¶¨ÏßÄ ÌÖåÏä§Ìä∏ ÏõπÏùò Î£®Ìä∏ Ïª¥Ìè¨ÎÑåÌä∏. 
 *       RN WebView ÏïàÏóêÏÑú Ïã§ÌñâÎêòÎ©∞, Î™®Îì† ÏÑπÏÖò ÌéòÏù¥ÏßÄÏôÄ Ï¢ÖÌï© Î°úÍ∑∏Î•º Í¥ÄÎ¶¨ÌïúÎã§.
 *
 * Ï£ºÏöî Í∏∞Îä•:
 * - CollapseSectionÏúºÎ°ú Í∞Å ÌÖåÏä§Ìä∏ ÏÑπÏÖò(WebViewBack, Push, Permission, Auth, Subscription, BootReady, Share)ÏùÑ Í∞êÏãºÎã§
 * - addAppMessageListenerÎ•º ÌÜµÌï¥ App ‚Üí Web Î©îÏãúÏßÄÎ•º ÏàòÏã†ÌïòÏó¨ Ï¢ÖÌï© Î°úÍ∑∏ Í∏∞Î°ù
 * - Web ‚Üí App Ï¥àÍ∏∞ Ïã†Ìò∏(WEB_READY) ÏûêÎèô Î∞úÏÜ°
 *
 * ÏÇ¨Ïö© Îß•ÎùΩ:
 * - RN WebViewÏóê ÎùÑÏö¥ ÌÖåÏä§Ìä∏ Ìà¥Ïùò ÏóîÌä∏Î¶¨ Ìè¨Ïù∏Ìä∏
 * - Ïï± Í∞úÎ∞úÏûê/QAÍ∞Ä Í∏∞Îä•Î≥Ñ ÎèôÏûëÏùÑ Í≤ÄÏ¶ùÌï† Îïå ÏÇ¨Ïö©
 *
 * Ïó∞Í¥Ä Î©îÏãúÏßÄ ÌÉÄÏûÖ:
 * - WEB_READY, PUSH_EVENT, PUSH_TOKEN, BACK_REQUEST,
 *   SUBSCRIPTION_RESULT, RESTORE_RESULT, PERMISSION_STATUS,
 *   SIGNIN_RESULT, SIGNOUT_RESULT, SPLASH_STATE, OFFLINE_FALLBACK,
 *   RETRY_TRIGGER, WEB_READY_ACK, WEB_ERROR_ACK, SHARE_RESULT
 *
 * ÎπÑÍ≥†:
 * - Ï¢ÖÌï© Î°úÍ∑∏ÏóêÎäî summarize()Î•º ÌÜµÌï¥ ÏöîÏïΩÎêú ÎÇ¥Ïö©Îßå ÎÇ®Í∏∞Í≥†,
 *   ÏÉÅÏÑ∏ payloadÎäî Í∞Å ÏÑπÏÖò Ï†ÑÏö© LogBoxÏóêÏÑú ÌôïÏù∏ Í∞ÄÎä•
 */

import React, { useEffect, useRef, useState } from "react";
import { postToApp, addAppMessageListener } from "./bridges/appBridge";

// ÏÑπÏÖò ÌéòÏù¥ÏßÄÎì§
import BootReadyPage from "./pages/BootReadyPage";
import WebViewBackPage from "./pages/WebViewBackPage";
import PushPage from "./pages/PushPage";
import PermissionPage from "./pages/PermissionPage";
import AuthPage from "./pages/AuthPage";
import SubscriptionPage from "./pages/SubscriptionPage";
import SharePage from "./pages/SharePage";             // ‚úÖ Ï∂îÍ∞Ä

// Í≥µÏö©
import CollapseSection from "./components/CollapseSection";
import DownloadPage from "./pages/DownloadPage";

// ‚úÖ ÌóàÏö© Î©îÏãúÏßÄ Î™©Î°ù(Ï¢ÖÌï© Î°úÍ∑∏/Ìï∏Îì§ÎßÅÏö©)
const ALLOWED_TYPES = new Set([
  "PUSH_EVENT",
  "PUSH_TOKEN",
  "BACK_REQUEST",
  "SUBSCRIPTION_RESULT",
  "RESTORE_RESULT",
  "PERMISSION_STATUS",
  "SIGNIN_RESULT",
  "SIGNOUT_RESULT",
  "SPLASH_STATE",
  "OFFLINE_FALLBACK",
  "RETRY_TRIGGER",
  "WEB_READY_ACK",
  "WEB_ERROR_ACK",
  "SHARE_RESULT",                      // ‚úÖ Í≥µÏú† Í≤∞Í≥º ÏàòÏã†
  "DOWNLOAD_RESULT",   // ‚úÖ RN ‚Üí Web Îã§Ïö¥Î°úÎìú Í≤∞Í≥º Î°úÍ∑∏ Î∞õÏùÑ Ïàò ÏûàÍ≤å
]);
const parseQS = () => new URLSearchParams(window.location.search);

export default function App() {
  const [logs, setLogs] = useState([]);
  const logRef = useRef(null);

  const pushLog = (title, obj) => {
    const line = `[${new Date().toLocaleTimeString()}] ${title} ${obj ? (typeof obj === "string" ? obj : JSON.stringify(obj)) : ""
      }`;
    setLogs((prev) => [...prev.slice(-499), line]);
  };
  const b64 = (s) => window.btoa(unescape(encodeURIComponent(s)));
  const mkBlob = (o) => b64(JSON.stringify(o));

  // Î©îÏãúÏßÄ ÏöîÏïΩ Î≥ÄÌôòÍ∏∞(Ï¢ÖÌï© Î°úÍ∑∏Ïö©)
  const summarize = (msg) => {
    const p = msg?.payload || {};
    switch (msg.type) {
      case "PUSH_EVENT":
        return { event: p.event, deeplink: p.deeplink, id: p.messageId };
      case "PUSH_TOKEN":
        return { tail: p.token ? `‚Ä¶${String(p.token).slice(-8)}` : "", platform: p.platform, ver: p.app_version };
      case "BACK_REQUEST":
        return { nav: p.nav?.hint || p.nav || {} };
      case "SUBSCRIPTION_RESULT":
        return p.success ? { ok: true, product: p.product_id, tx: p.transaction_id } : { ok: false, code: p.error_code };
      case "RESTORE_RESULT":
        return { active: p.active, product: p.product_id, tx: p.transaction_id };
      case "PERMISSION_STATUS":
        return { cam: p.camera, push: p.push };
      case "SIGNIN_RESULT":
        return p.success ? { ok: true, provider: p.provider, user: p.user?.id || p.user?.nickname } : { ok: false, code: p.error_code };
      case "SIGNOUT_RESULT":
        return { ok: p.success };
      case "SPLASH_STATE":
        return { on: !!p.on };
      case "OFFLINE_FALLBACK":
        return { reason: p.reason, at: p.at };
      case "RETRY_TRIGGER":
        return { at: p.at };
      case "WEB_READY_ACK":
      case "WEB_ERROR_ACK":
        return p;
      case "SHARE_RESULT":                                // ‚úÖ Í≥µÏú† ÏöîÏïΩ
        return p.success ? { ok: true, platform: p.platform, post: p.post_id } : { ok: false, code: p.error_code };
      default:
        return p;
    }
  };

  // Îã®Ïùº Ìï∏Îì§Îü¨
  const handleMessage = (msg, rawEvent) => {
    // DevTools/Ïä§Ìå∏ Ï∞®Îã®
    if (rawEvent?.data?.source === "react-devtools-content-script") return;
    if (!msg || typeof msg !== "object" || typeof msg.type !== "string") return;
    if (!ALLOWED_TYPES.has(msg.type)) {
      // pushLog("‚á¶ (ignored)", { type: msg.type });
      return;
    }

    // Ï¢ÖÌï© Î°úÍ∑∏: ÏöîÏïΩÏúºÎ°ú ÎÇ®ÍπÄ
    pushLog(`‚á¶ ${msg.type}`, summarize(msg));

    // ÏÉÅÏÑ∏ Ï≤òÎ¶¨Îäî Í∞Å ÏÑπÏÖò ÌéòÏù¥ÏßÄ(useSectionLog)ÏóêÏÑú ÏàòÌñâ
  };

  // Ïï± ‚Üí Ïõπ Î©îÏãúÏßÄ ÏàòÏã† (Ï¢ÖÌï© Î°úÍ∑∏)
  useEffect(() => {
    const unbind = addAppMessageListener((msg, rawEvent) => handleMessage(msg, rawEvent));

    // Ïõπ Î°úÎìú ÏôÑÎ£å Ïã†Ìò∏ (Ïä§ÌîåÎûòÏãú Ìï¥Ï†ú Ìä∏Î¶¨Í±∞)
    const ready = { type: "WEB_READY", payload: { at: Date.now(), ver: "WizMarketing@0.1.0" } };
    setTimeout(() => {
      postToApp(ready);
      pushLog("‚á® Web ‚Üí App", ready);
    }, 100);

    return () => unbind?.();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []); // ÏùòÎèÑÏ†ÅÏúºÎ°ú deps ÎπÑÏõÄ(Ìï∏Îì§Îü¨ Ïû¨Î∞îÏù∏Îî© Î∞©ÏßÄ)

  // Ï¢ÖÌï© Î°úÍ∑∏ ÏûêÎèô Ïä§ÌÅ¨Î°§
  useEffect(() => {
    if (logRef.current) logRef.current.scrollTop = logRef.current.scrollHeight;
  }, [logs]);


  // ‚úÖ ÎÑ§Ïù¥Î≤Ñ ÏΩúÎ∞± Ï≤òÎ¶¨ (App.jsx Ïïà, useEffect ÎÇ¥Î∂Ä)
  useEffect(() => {
    const q = new URLSearchParams(window.location.search);
    const code = q.get("code");
    const state = q.get("state");
    const err = q.get("error");
    if (!code && !err) return; // ÏΩúÎ∞± ÏïÑÎãò

    (async () => {
      if (err) {
        console.error("[NAVER_CALLBACK] ÏóêÎü¨ ÏøºÎ¶¨", err);
        postToApp({
          type: "NAVER_LOGIN_DONE",
          payload: { success: false, error: `naver_error:${err}` },
        });
        window.history.replaceState({}, "", window.location.pathname);
        return;
      }

      try {
        // CSRF Ï≤¥ÌÅ¨
        const saved = sessionStorage.getItem("naver_oauth_state");
        console.log("[NAVER_CALLBACK] state check", { fromQuery: state, saved });
        if (!state || saved !== state) throw new Error("state_mismatch");

     
   
        const FUNCTION_URL ="https://asia-northeast1-wizad-b69ee.cloudfunctions.net/naverExchange"
        

        // üîê ÍµêÌôò Ìò∏Ï∂ú
        const resp = await fetch(FUNCTION_URL, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ code, state, redirect_uri: window.location.origin + "/" }),
        });

        // ÏïàÏ†Ñ ÌååÏã±
        const status = resp.status;
        let bodyJson = null;
        let bodyText = "";
        try {
          bodyJson = await resp.json();
        } catch {
          try {
            bodyText = await resp.text();
          } catch { }
        }

   

        // ÏÑ±Í≥µ/Ïã§Ìå® Î∂ÑÍ∏∞
        if (!resp.ok || !bodyJson?.success) {
          const msg = bodyJson?.message || bodyText || "exchange_failed";
          console.warn("[NAVER_CALLBACK] ÍµêÌôò Ïã§Ìå®", { status, msg });
          postToApp({
            type: "NAVER_LOGIN_DONE",
            payload: { success: false, error: `exchange_failed_${status}:${msg}` },
          });
          window.history.replaceState({}, "", window.location.pathname);
          return;
        }

        // ‚úÖ ÏÑ±Í≥µ
        console.log("[NAVER_CALLBACK] ÍµêÌôò ÏÑ±Í≥µ", bodyJson.profile);

        const { id, name, email } = bodyJson.profile || {};
        alert(
          `ÎÑ§Ïù¥Î≤Ñ Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µ üéâ\n\n` +
          `ID: ${id || "-"}\n` +
          `Ïù¥Î¶Ñ: ${name || "-"}\n` +
          `Ïù¥Î©îÏùº: ${email || "-"}`
        );

        postToApp({
          type: "NAVER_LOGIN_DONE",
          payload: {
            success: true,
            profile: bodyJson.profile || null,
          },
        });
      } catch (e) {
        console.error("[NAVER_CALLBACK] ÏòàÏô∏ Î∞úÏÉù", e);
        postToApp({
          type: "NAVER_LOGIN_DONE",
          payload: { success: false, error: String(e?.message || e) },
        });
      } finally {
        // URL Ï†ïÎ¶¨
        window.history.replaceState({}, "", window.location.pathname);
      }
    })();
  }, []);





  return (
    <div className="wrap">
      <h1>WizMarketing (CRA)</h1>


      <div className="grid">
        <CollapseSection id="sec-boot" title="Î∂ÄÌåÖ & Splash[Í≤ÄÏ¶ùÏôÑÎ£å]" defaultOpen={true}>
          <BootReadyPage />
        </CollapseSection>

        <CollapseSection id="sec-perm" title="Í∂åÌïú ÌÖåÏä§Ìä∏[Í≤ÄÏ¶ùÏôÑÎ£å]" defaultOpen={false}>
          <PermissionPage />
        </CollapseSection>

        <CollapseSection id="sec-back" title="Îí§Î°úÍ∞ÄÍ∏∞ ÌÖåÏä§Ìä∏[Í≤ÄÏ¶ùÏôÑÎ£å]" defaultOpen={true}>
          <WebViewBackPage />
        </CollapseSection>

        <CollapseSection id="sec-subscription" title="Íµ¨ÎèÖ/Í≤∞Ï†ú ÌÖåÏä§Ìä∏[Í≤ÄÏ¶ùÏôÑÎ£å]" defaultOpen={false}>
          <SubscriptionPage />
        </CollapseSection>



        <CollapseSection id="sec-push" title="Ìë∏Ïãú ÏïåÎûå ÌÖåÏä§Ìä∏[Í≤ÄÏ¶ùÏôÑÎ£å]" defaultOpen={false}>
          <PushPage />
        </CollapseSection>

        <CollapseSection id="sec-auth" title="Î°úÍ∑∏Ïù∏ ÌÖåÏä§Ìä∏[Í≤ÄÏ¶ùÏôÑÎ£å]" defaultOpen={false}>
          <AuthPage />
        </CollapseSection>

  
        <CollapseSection id="sec-share" title="Í≥µÏú†(Ïù∏Ïä§ÌÉÄ Îì±) ÌÖåÏä§Ìä∏[Í≤ÄÏ¶ùÏôÑÎ£å]" defaultOpen={false}>
          <SharePage />
        </CollapseSection>


        <CollapseSection id="sec-download" title="Ïù¥ÎØ∏ÏßÄ Îã§Ïö¥Î°úÎìú ÌÖåÏä§Ìä∏[Í≤ÄÏ¶ùÏôÑÎ£å]" defaultOpen={false}>
          <DownloadPage />
        </CollapseSection>
        
      </div>

      {/* <h2 style={{ marginTop: 20 }}>Ï¢ÖÌï© Î°úÍ∑∏</h2>
      <div className="log" ref={logRef}>
        {logs.map((l, i) => (
          <div key={i}>{l}</div>
        ))}
      </div> */}
    </div>
  );
}
